<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>nasl</string>
    <key>scopeName</key>
    <string>source.nasl</string>
    <key>fileTypes</key>
    <array>
      <string>nasl</string>
      <string>inc</string>
      <string>static</string>
    </array>
    <key>foldingStartMarker</key>
    <string/>
    <key>foldingStopMarker</key>
    <string/>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#pure_string</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#impure_string</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#augmented_assign_operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#arithmetic_operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#increment_decrement_operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#assignment_operator</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#logical_operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comparison_operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#hexadecimal_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#octal_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#decimal_literal</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#language_constants</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#keywords</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#builtin_variable_names</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#builtin_constant_names</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#loc_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#glob_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#var_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#new_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#delete_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#include_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#this_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#super_keyword</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#block</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function_call</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#namespace_prefix</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#keyword_arguments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#namespace_storage_type</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#object_storage_type</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function_definition</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comment_block</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>escaped_char</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.hex.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.octal.nasl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.newline.nasl</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backlash.nasl</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.double-quote.nasl</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.single-quote.nasl</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.bell.nasl</string>
          </dict>
          <key>8</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backspace.nasl</string>
          </dict>
          <key>9</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.formfeed.nasl</string>
          </dict>
          <key>10</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.linefeed.nasl</string>
          </dict>
          <key>11</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.return.nasl</string>
          </dict>
          <key>12</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.tab.nasl</string>
          </dict>
          <key>13</key>
          <dict>
            <key>name</key>
            <string>constant.character.escape.vertical-tab.nasl</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(\\x[0-9A-Fa-f]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\a)|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)</string>
      </dict>
      <key>pure_string</key>
      <dict>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>'</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.nasl</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.single.js</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#escaped_char</string>
          </dict>
        </array>
      </dict>
      <key>impure_string</key>
      <dict>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.nasl</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.nasl</string>
      </dict>
      <key>comment</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.nasl</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(#|//).*$\n?</string>
        <key>name</key>
        <string>comment.line.single.nasl</string>
      </dict>
      <key>comment_block</key>
      <dict>
        <key>begin</key>
        <string>\s*/\*</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\*/</string>
        <key>name</key>
        <string>comment.block.nasl</string>
      </dict>
      <key>arithmetic_operators</key>
      <dict>
        <key>match</key>
        <string>\+|\-|\*|\*\*|/|%|&lt;&lt;|&gt;&gt;|&gt;&gt;&gt;|&amp;|\||\^|~</string>
        <key>name</key>
        <string>keyword.operator.arithmetic.nasl</string>
      </dict>
      <key>augmented_assign_operators</key>
      <dict>
        <key>match</key>
        <string>\+\=|-\=|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&gt;&gt;&gt;\=|&lt;&lt;\=|\*\*\=</string>
        <key>name</key>
        <string>keyword.operator.assignment.augmented.nasl</string>
      </dict>
      <key>increment_decrement_operators</key>
      <dict>
        <key>match</key>
        <string>(\-\-|\+\+)</string>
        <key>name</key>
        <string>keyword.operator.increment-decrement.nasl</string>
      </dict>
      <key>assignment_operator</key>
      <dict>
        <key>match</key>
        <string>\=</string>
        <key>name</key>
        <string>keyword.operator.assignment.nasl</string>
      </dict>
      <key>logical_operators</key>
      <dict>
        <key>comment</key>
        <string>keyword operators that evaluate to True or False</string>
        <key>match</key>
        <string>\b(and|or|\|\||&amp;&amp;)\b|\!</string>
        <key>name</key>
        <string>keyword.operator.logical.nasl</string>
      </dict>
      <key>comparison_operators</key>
      <dict>
        <key>match</key>
        <string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=|&gt;&lt;|&gt;\!&lt;|\!~|\=~</string>
        <key>name</key>
        <string>keyword.operator.comparison.nasl</string>
      </dict>
      <key>hexadecimal_literal</key>
      <dict>
        <key>match</key>
        <string>\b(?i:(0x\h*))</string>
        <key>name</key>
        <string>constant.numeric.integer.hexadecimal.nasl</string>
      </dict>
      <key>octal_literal</key>
      <dict>
        <key>match</key>
        <string>\b(0[0-7]+)</string>
        <key>name</key>
        <string>constant.numeric.integer.octal.nasl</string>
      </dict>
      <key>decimal_literal</key>
      <dict>
        <key>match</key>
        <string>\b([1-9]+[0-9]*|0)</string>
        <key>name</key>
        <string>constant.numeric.integer.decimal.nasl</string>
      </dict>
      <key>identifier</key>
      <dict>
        <key>match</key>
        <string>~?[A-Za-z_][A-Za-z0-9_]*</string>
      </dict>
      <key>keywords</key>
      <dict>
        <key>comment</key>
        <string>keywords that delimit flow blocks or alter flow from within a block</string>
        <key>match</key>
        <string>\b(if|else|for|while|do|repeat|until|foreach|break|continue|return|switch|case|in|of)\b</string>
        <key>name</key>
        <string>keyword.control.flow.nasl</string>
      </dict>
      <key>language_constants</key>
      <dict>
        <key>match</key>
        <string>\b(NULL|TRUE|FALSE|true|false)\b</string>
        <key>name</key>
        <string>constant.language.nasl</string>
      </dict>
      <key>namespace_storage_type</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.namespace.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.namespace.nasl</string>
          </dict>
        </dict>
        <key>match</key>
        <string>\b(namespace)\b\s+([a-zA-Z0-9_]+)</string>
      </dict>
      <key>loc_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(local_var)\b</string>
        <key>name</key>
        <string>storage.modifier.local.nasl</string>
      </dict>
      <key>glob_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(global_var)\b</string>
        <key>name</key>
        <string>storage.modifier.global.nasl</string>
      </dict>
      <key>var_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(var)\b(?!:)</string>
        <key>name</key>
        <string>storage.type.variable.nasl</string>
      </dict>
      <key>new_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(new)\b(?!:)</string>
        <key>name</key>
        <string>keyword.new.nasl</string>
      </dict>
      <key>delete_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(delete)\b(?!:)</string>
        <key>name</key>
        <string>keyword.delete.nasl</string>
      </dict>
      <key>include_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(include)\b</string>
        <key>name</key>
        <string>keyword.include.nasl</string>
      </dict>
      <key>this_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(this)\b</string>
        <key>name</key>
        <string>keyword.this.nasl</string>
      </dict>
      <key>super_keyword</key>
      <dict>
        <key>match</key>
        <string>\b(super)\b</string>
        <key>name</key>
        <string>keyword.super.nasl</string>
      </dict>
      <key>builtin_variable_names</key>
      <dict>
        <key>match</key>
        <string>\b(__FCT_ANON_ARGS|_FCT_ANON_ARGS)\b</string>
        <key>name</key>
        <string>support.variable.builtin.nasl</string>
      </dict>
      <key>builtin_constant_names</key>
      <dict>
        <key>comment</key>
        <string>magic variables which a class/module may have.</string>
        <key>match</key>
        <string>\b(pcap_timeout|IPPROTO_TCP|IPPROTO_ICMP|IPPROTO_IGMP|IPPROTO_UDP|ENCAPS_SSLv23|ENCAPS_SSLv2|ENCAPS_SSLv3|ENCAPS_TLSv1|ENCAPS_TLSv1_1|ENCAPS_TLSv1_2|ENCAPS_TLSv1_3|ENCAPS_VERIFY_PEER|ENCAPS_VERIFY_HOST|ENCAPS_UNSAFE_DHKEYLEN|ENCAPS_DISABLE_SSLv2|ENCAPS_DISABLE_SSLv3|ENCAPS_DISABLE_TLSv1|ENCAPS_DISABLE_TLSv1_1|ENCAPS_DISABLE_TLSv1_2|ENCAPS_DISABLE_TLSv1_3|NID_SHA1|NID_SHA256|NID_SHA512|NESSUS_3|TH_SYN|TH_RST|TH_PUSH|TH_ACK|TH_URG|IP_DF|IP_MF|IP_OFFMASK|ACT_GATHER_INFO|ACT_ATTACK|ACT_MIXED_ATTACK|ACT_DESTRUCTIVE_ATTACK|ACT_DENIAL|ACT_SCANNER|ACT_SETTINGS|ACT_KILL_HOST|ACT_FLOOD|ACT_COMPLIANCE_CHECK|ACT_PATCH_SETUP|ACT_PATCH_APPLY|ACT_PATCH_POST_APPLY|ACT_THIRD_PARTY_INFO|ACT_END|ACT_END_REPORT|ACT_END2|NOERR|ETIMEDOUT|ECONNRESET|EUNREACH|EUNKNOWN|ESSL|EINPROGRESS|ECONNREFUSED|ENOBUFS|EACCES|EADDRNOTAVAIL|EINVAL|ENOTSTARTED|EROLLEDBACK|EROLLBACKFAILED|ECOMMITFAILED|SO_PID|SO_SEND_CHUNK_SIZE|SO_RX|SO_TX|Z_RLE|Z_HUFFMAN_ONLY|Z_FILTERED|SEEK_CUR|SEEK_END|DLT_FDDI|DLT_ENC|DLT_EN10MB|DLT_IEEE802|DLT_SLIP|DLT_LINUX_SLL|DLT_LOOP|DLT_NULL|DLT_PPP_SERIAL|DLT_PPP_ETHER|DLT_PPP_BSDOS|DLT_SLIP_BSDOS|DLT_PPP|DLT_RAW|DLT_UNKNOWN|N_STATE_DIR|N_LOG_DIR|N_CONF_DIR|N_CA_PUB_DIR|N_CA_PRIV_DIR|N_WWW_DIR|N_PLUGIN_DIR|N_REPORT_ENGINE_DIR|N_AUDITS_DIR|N_TOOLS_DIR|N_WIZARDS_DIR|N_SBIN_DIR|N_BIN_DIR|N_REMOTE_DIR|N_TEMPLATES_DIR|N_LIB_DIR|N_LIBEXEC_DIR|SHUT_RD|SHUT_WR|SHUT_RDWR|XMLRPC_CTRL_SCAN_STOP|XMLRPC_CTRL_SCAN_PAUSE|XMLRPC_CTRL_SCAN_RESUME|XMLRPC_CTRL_SCAN_KILL|AF_INET|AF_INET6|NC_ENCODE_XML|NC_ENCODE_JSON|NC_ENCODE_RAW|DB_ACL_ATTACH|DB_ACL_DETACH|DB_ACL_ANALYZE|DB_ACL_CREATE_VTABLE|DB_ACL_DROP_VTABLE|DB_ACL_FUNCTION|DB_ACL_SAVEPOINT|JCS_UNKNOWN|JCS_GRAYSCALE|JCS_RGB|JCS_YCbCr|JCS_CMYK|JCS_YCCK|XML_PARSE_NOENT|XML_PARSE_DTDLOAD|XML_PARSE_DTDATTR|XML_PARSE_DTDVALID|XML_PARSE_NOERROR|XML_PARSE_NOWARNING|XML_PARSE_PEDANTIC|XML_PARSE_NOBLANKS|XML_PARSE_SAX1|XML_PARSE_XINCLUDE|XML_PARSE_NONET|XML_PARSE_NODICT|XML_PARSE_NSCLEAN|XML_PARSE_NOCDATA|XML_PARSE_NOXINCNODE|XML_PARSE_COMPACT|XML_PARSE_OLD10|XML_PARSE_NOBASEFIX|XML_PARSE_HUGE|XML_PARSE_OLDSAX|XML_PARSE_IGNORE_ENC|XML_PARSE_BIG_LINES|XMLSEC_KEY_FORMAT_BINARY|XMLSEC_KEY_FORMAT_PEM|XMLSEC_KEY_FORMAT_DER|XMLSEC_KEY_FORMAT_PKCS8_PEM|XMLSEC_KEY_FORMAT_PKCS8_DER|XMLSEC_KEY_FORMAT_PKCS12|XMLSEC_KEY_FORMAT_CERT_PEM|XMLSEC_KEY_FORMAT_CERT_DER|SHARED_OBJECTS|FORK_SHARED_GLOBALS|FORK_SHARED_OBJECTS|FORK_TERM_ON_RELOAD|ENV_APP|ENV_SCRIPT|ENV_RUNTIME|ENV_OS|ENV_HOST|ENV_SYSTEM|ENV_PLUGIN|ENV_SCAN|PRODUCT_NESSUSD|PRODUCT_WIN_AGENT|PRODUCT_UNIX_AGENT|PRODUCT_NESSUSD_NSX|SERIALIZE_NONE|SERIALIZE_JSON|SERIALIZE_XML|SERIALIZE_URL|SERIALIZE_URL_QUERY|SERIALIZE_URL_PATH|SERIALIZE_ZIP|SERIALIZE_FORMAT|SERIALIZE_OBJECT|SERIALIZE_STRICT|SERIALIZE_FLOATS_TO_STRING|SKTEX_KDC|SKTEX_PROXY|SKTEX_TCP|SKTEX_UDP|SKTEX_NOBLOCK|SKTEX_SSH|SKTEX_SMB|NOGEX_DFLT|DB_ENC_NONE|DB_ENC_MASTER_KEY|DB_ENC_DEFAULT_KEY|DB_ENC_RAW_KEY|DB_ENC_PASSWORD|DB_COMP_NONE|DB_COMP_ZLIB|DB_COMP_SNAPPY|OP_MODE_OFB128|OP_MODE_XTS128|TIME_OFDAY|TIME_UNIX|TIME_UTC|TIME_LOCAL|Z_NO_FLUSH|Z_FINISH|Z_PARTIAL_FLUSH|RSA_PKCS1_PADDING|RSA_PKCS1_OAEP_PADDING|RSA_NO_PADDING|NASL_TYPE_UNSET|NASL_TYPE_INT|NASL_TYPE_UINT|NASL_TYPE_NUMBER|NASL_TYPE_STRING|NASL_TYPE_DATA|NASL_TYPE_STRDATA|NASL_TYPE_BOOL|NASL_TYPE_ARRAY|NASL_TYPE_LIST|NASL_TYPE_FUNCTION|NASL_TYPE_OBJECT|SCAN_ERROR_UNRESOLVEABLE_TARGET|SCAN_ERROR_UNPARSEABLE_TARGET|SCAN_ERROR_RESTRICTED_TARGET|SCAN_ERROR_DISALLOWED_TARGET|SCAN_ERROR_ESSENTIALS_SCAN_TARGET_LIMIT|SCAN_ERROR_LICENSE_SCAN_TARGET_LIMIT|SCAN_ERROR_ESSENTIALS_OVERALL_TARGET_LIMIT|SCAN_ERROR_EVAL_OVERALL_TARGET_LIMIT|SCAN_ERROR_LICENSE_OVERALL_TARGET_LIMIT|SCAN_ERROR_INTERFACE_PACKET_FORGERY_UNAVAILABLE|SCAN_ERROR_VM_PACKET_FORGERY_UNAVAILABLE|SCAN_ERROR_INTERFACE_PACKET_FORGERY_UNRELIABLE|SCAN_ERROR_PACKET_CAPTURE_TRUNCATION|SCAN_ERROR_TARGET_UNREACHABLE|SCAN_ERROR_TARGET_CONGESTION|SCAN_ERROR_AGENT_SCAN_NOT_STARTED|SCAN_ERROR_AGENT_SCANS_NOT_STARTED|SCAN_ERROR_AGENT_SCAN_NOT_COMPLETED|SCAN_ERROR_AGENT_SCANS_NOT_COMPLETED|SCAN_ERROR_AGENT_SCANS_ABORTED|SCAN_ERROR_SCANNER_IMPORT_FAILURE|SCAN_ERROR_AGENT_IMPORT_FAILURE|SCAN_ERROR_NODE_IMPORT_FAILURE|SCAN_ERROR_ATTACHMENT_NOT_FOUND|SCAN_ERROR_ATTACHMENT_TOO_LARGE|SCAN_ERROR_AUDIT_DEPRECATED|SCAN_ERROR_EMAIL_FAILURE|SCAN_ERROR_PLUGIN_GENERIC|SCAN_ERROR_PORTSCANNER_PORT_LIMIT|SCAN_ERROR_REPORT_PORT_LIMIT|SCAN_ERROR_SCRATCHPAD_SIZE_LIMIT|IPFMT_IP6_NO_SCOPE|OP_APPEND|OP_DELETE|OP_INSERT|NID_X25519|NID_X448|NID_ED25519|NID_ED448|SUCCESS|E_EXEC_FAILED|E_TRUNCATED|E_TIMEOUT|E_OOM|E_IO|E_INVAL|ON_OVERFLOW_ABORT|ON_OVERFLOW_FAIL|ON_OVERFLOW_TRUNCATE|FUNCTION_NAME|SCRIPT_NAME|ACT_INIT|ENCAPS_IP|MSG_OOB|IPPROTO_IP|TH_FIN|description|COMMAND_LINE|NASL_LEVEL|LINE_NUMBER)\b</string>
        <key>name</key>
        <string>support.constant.builtin.nasl</string>
      </dict>
      <key>illegal_names</key>
      <dict>
        <key>match</key>
        <string>\b(and|or|break|continue|else|for|foreach|global_var|local_var|if|return|while|until|in|of)\b</string>
        <key>name</key>
        <string>invalid.illegal.name.nasl</string>
      </dict>
      <key>keyword_arguments</key>
      <dict>
        <key>begin</key>
        <string>(?&lt;!:)\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(\:)(?!=|\:)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.function.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\s*(?:(,)|(?=$\n?|[\)]))</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.parameters.nasl</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>$self</string>
          </dict>
        </array>
      </dict>
      <key>namespace_prefix</key>
      <dict>
        <key>match</key>
        <string>\b([A-Za-z_][A-Za-z0-9_]*)(\:\:)\b(?=[A-Za-z_][A-Za-z0-9_]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.namespace.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.accessor.namespace.nasl</string>
          </dict>
        </dict>
      </dict>
      <key>block</key>
      <dict>
        <key>begin</key>
        <string>\{</string>
        <key>end</key>
        <string>\}</string>
        <key>name</key>
        <string>meta.block.nasl</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_innards</string>
          </dict>
        </array>
      </dict>
      <key>function_definition</key>
      <dict>
        <key>begin</key>
        <string>^\s*((?:private\s+|public\s+|protected\s+)?function)\s+(?=~?[A-Za-z_][A-Za-z0-9_]*\s*\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.function.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\))\s*</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.nasl</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.function.nasl</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?=~?[A-Za-z_][A-Za-z0-9_]*)</string>
            <key>contentName</key>
            <string>entity.name.function.nasl</string>
            <key>end</key>
            <string>(?![A-Za-z0-9_~])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#entity_name_function</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.begin.nasl</string>
              </dict>
            </dict>
            <key>contentName</key>
            <string>meta.function.parameters.nasl</string>
            <key>end</key>
            <string>(?=\)\s*)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>variable.parameter.function.nasl</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.separator.parameters.nasl</string>
                  </dict>
                </dict>
                <key>match</key>
                <string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)]))</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>object_storage_type</key>
      <dict>
        <key>begin</key>
        <string>^\s*(object)\s+([a-zA-Z0-9_]+)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.modifier.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.class.nasl</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\{</string>
        <key>name</key>
        <string>meta.class.nasl</string>
      </dict>
      <key>function_call</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.whitespace.function-call.leading.nasl</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.function.any-method.nasl</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.nasl</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(?x) (?: (?= \s )  (?:(?&lt;=else|return) | (?&lt;!\w)) (\s+))?(\b(?!(while|for|foreach|repeat|if|else|return|switch)\s*\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\b )++  ) \s*(\()</string>
        <key>name</key>
        <string>meta.function-call.nasl</string>
      </dict>
      <key>block_innards</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function_call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>$base</string>
          </dict>
        </array>
      </dict>
      <key>entity_name_function</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#illegal_names</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>comments</key>
    <dict>
      <key>lineCommentNumberSymbol</key>
      <string>#</string>
      <key>lineCommentDoubleSlash</key>
      <string>//</string>
      <key>blockComment</key>
      <array>
        <string>/\*</string>
        <string>\*/</string>
      </array>
    </dict>
    <key>brackets</key>
    <array>
      <array>
        <string>(</string>
        <string>)</string>
      </array>
      <array>
        <string>[</string>
        <string>]</string>
      </array>
      <array>
        <string>{</string>
        <string>}</string>
      </array>
    </array>
    <key>autoClosingPairs</key>
    <array>
      <dict>
        <key>open</key>
        <string>{</string>
        <key>close</key>
        <string>}</string>
      </dict>
      <dict>
        <key>open</key>
        <string>[</string>
        <key>close</key>
        <string>]</string>
      </dict>
      <dict>
        <key>open</key>
        <string>(</string>
        <key>close</key>
        <string>)</string>
      </dict>
      <dict>
        <key>open</key>
        <string>'</string>
        <key>close</key>
        <string>'</string>
        <key>notIn</key>
        <array>
          <string>string</string>
          <string>comment</string>
        </array>
      </dict>
      <dict>
        <key>open</key>
        <string>"</string>
        <key>close</key>
        <string>"</string>
        <key>notIn</key>
        <array>
          <string>string</string>
        </array>
      </dict>
      <dict>
        <key>open</key>
        <string>/*</string>
        <key>close</key>
        <string> */</string>
        <key>notIn</key>
        <array>
          <string>string</string>
        </array>
      </dict>
    </array>
    <key>indentationRules</key>
    <dict>
      <key>increaseIndentPattern</key>
      <string>^((?!\/\/).)*(\{[^}"'`]*|\([^)"'`]*|\[[^\]"'`]*)$</string>
      <key>decreaseIndentPattern</key>
      <string>^((?!.*?\/\*).*\*/)?\s*[\}\]].*$</string>
    </dict>
    <key>uuid</key>
    <string>0CD9B88A-6D53-432A-978F-FE570F5CB0E1</string>
  </dict>
</plist>
